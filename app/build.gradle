plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.plugin.compose'
    id 'com.google.devtools.ksp'
    id 'com.google.firebase.crashlytics'
    alias(libs.plugins.kotlinx.serialization)
}

android {
    namespace 'br.com.smdevelopment.rastreamentocorreios'
    compileSdk 35

    defaultConfig {
        applicationId "br.com.smdevelopment.rastreamentocorreios"
        minSdk 26
        targetSdk 35
        minSdkVersion 26
        versionCode 41
        versionName "41"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            debuggable = true
            buildConfigField "String", "SERVER_URL", "\"https://api.linketrack.com\""
            buildConfigField "String", "USER", "\"sergioborgesmendes12@gmail.com\""
            buildConfigField "String", "TOKEN", "\"0ecd0f0da1454597e2bbc9cca3126c56937f8cb2eb424fdc10134c8dc43de3a5\""
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable = true
            buildConfigField "String", "SERVER_URL", "\"https://api.linketrack.com\""
            buildConfigField "String", "USER", "\"sergioborgesmendes12@gmail.com\""
            buildConfigField "String", "TOKEN", "\"0ecd0f0da1454597e2bbc9cca3126c56937f8cb2eb424fdc10134c8dc43de3a5\""
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildFeatures {
        buildConfig = true
    }
}

dependencies {
    // Ktor
    implementation libs.ktor.client.core
    implementation libs.ktor.client.android
    implementation libs.ktor.client.logging
    implementation libs.ktor.serialization.kotlinx.json
    implementation libs.ktor.client.content.negotiation
    implementation libs.kotlinx.serialization.json

    // Koin core features
    implementation libs.koin.android
    implementation libs.koin.compose

    // Coroutines
    implementation libs.coroutines.core
    implementation libs.coroutines.android

    // Coroutine Lifecycle Scopes
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.runtime.ktx

    // Retrofit
    implementation libs.converter.gson
    implementation libs.logging.interceptor

    // Compose
    implementation libs.material3
    implementation libs.material
    implementation platform(libs.compose.bom)
    implementation libs.compose.material3
    implementation libs.androidx.foundation
    implementation libs.navigation.compose
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.accompanist.swiperefresh
    implementation libs.coil.compose
    implementation libs.activity.compose
    implementation libs.lifecycle.viewmodel.compose
    implementation libs.androidx.runtime.livedata
    implementation libs.androidx.ui.tooling.preview
    implementation libs.play.services.auth
    implementation libs.firebase.messaging.ktx
    debugImplementation libs.androidx.ui.tooling

    // Room
    implementation libs.room.runtime
    implementation libs.room.ktx
    implementation libs.runtime.livedata
    annotationProcessor libs.room.compiler
    ksp libs.room.compiler

    // Lottie
    implementation libs.lottie.compose

    //Work manager
    implementation libs.work.runtime.ktx

    //Permissions
    implementation libs.accompanist.permissions

    implementation libs.accompanist.systemuicontroller
    implementation libs.core.ktx
    implementation libs.lifecycle.runtime.ktx
    testImplementation libs.junit
    debugImplementation libs.ui.tooling
    debugImplementation libs.ui.test.manifest

    // Import the BoM for the Firebase platform
    implementation platform(libs.firebase.bom)
    implementation libs.google.firebase.auth.ktx

    implementation libs.google.services

    implementation(project(":price"))
    implementation(project(":core"))

    implementation(libs.firebase.crashlytics)
    implementation(libs.firebase.analytics)
}